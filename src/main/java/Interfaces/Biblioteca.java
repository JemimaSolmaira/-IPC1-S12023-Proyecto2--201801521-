
package Interfaces;

import clases.Categorias;
import clases.Imagenes;
import clases.ListaCircular;
import clases.ListaUsuarios;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author joz
 */
public class Biblioteca extends javax.swing.JFrame {

    
    
    Categorias categoria;
    DefaultListModel <String> agregar = new DefaultListModel<>();
    private File fichero;
    ListaCircular ListIm = new ListaCircular();
    String UsuarioActual;
    
    public Biblioteca(String Us) {
        initComponents();
        setLocationRelativeTo(null);
        categoria=new Categorias();
        this.UsuarioActual= Us;
        MostrarUsuario.setText(UsuarioActual);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        listacat = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        SubirImagen = new javax.swing.JButton();
        Agregar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        Borrar = new javax.swing.JButton();
        mostrarImagen = new javax.swing.JLabel();
        Siguiente = new javax.swing.JButton();
        Anterior = new javax.swing.JButton();
        BorrarIm = new javax.swing.JButton();
        Nombreimagen = new javax.swing.JLabel();
        Guardar = new javax.swing.JButton();
        MostrarUsuario = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        jLabel1.setText("Biblioteca");

        listacat.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "General" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listacat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listacatMouseClicked(evt);
            }
        });
        listacat.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listacatValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listacat);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("General");

        SubirImagen.setText("Subir Imagen");
        SubirImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubirImagenActionPerformed(evt);
            }
        });

        Agregar.setText("Agregar ");
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Catalogo");

        Borrar.setText("Borrar");
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });

        mostrarImagen.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Siguiente.setText("->");
        Siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SiguienteActionPerformed(evt);
            }
        });

        Anterior.setText("<-");
        Anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnteriorActionPerformed(evt);
            }
        });

        BorrarIm.setText("Borrar Imagen");
        BorrarIm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarImActionPerformed(evt);
            }
        });

        Nombreimagen.setText("Nombre de imagen");

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        MostrarUsuario.setText("NombredeUsuario");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel3))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(mostrarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Siguiente))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(243, 243, 243)
                                .addComponent(Nombreimagen)))
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Agregar)
                        .addGap(29, 29, 29)
                        .addComponent(Borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108)
                        .addComponent(SubirImagen)
                        .addGap(18, 18, 18)
                        .addComponent(BorrarIm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Guardar)
                        .addGap(61, 61, 61))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MostrarUsuario)
                        .addGap(81, 81, 81))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(310, 310, 310)
                    .addComponent(Anterior)
                    .addContainerGap(537, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(MostrarUsuario)
                        .addGap(24, 24, 24)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Siguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(207, 207, 207))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(Nombreimagen)
                                .addGap(28, 28, 28)
                                .addComponent(mostrarImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jSeparator2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Agregar)
                    .addComponent(SubirImagen)
                    .addComponent(Borrar)
                    .addComponent(BorrarIm)
                    .addComponent(Guardar))
                .addGap(22, 22, 22))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(323, Short.MAX_VALUE)
                    .addComponent(Anterior, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(264, 264, 264)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
       String NombreCat = JOptionPane.showInputDialog("Ingrese el nombre de la categoria");
      
       categoria.add(NombreCat);
       
       actualizarlista();
       
    }//GEN-LAST:event_AgregarActionPerformed

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        int indice = listacat.getSelectedIndex();
        String elemento = listacat.getModel().getElementAt(indice);
        
        int indborrar = categoria.Buscarindice(elemento);
        
       categoria.borrar(indborrar);
       actualizarlista();
       
    }//GEN-LAST:event_BorrarActionPerformed

    private void SubirImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubirImagenActionPerformed

       String Usuario = this.UsuarioActual;
       File fich = null;

        JFileChooser escojerImagen = new JFileChooser();
        
        int eleccion = escojerImagen.showOpenDialog(this);
        
        if(eleccion == JFileChooser.APPROVE_OPTION) {
            fich = escojerImagen.getSelectedFile();
            
            ImageIcon imagen = new ImageIcon(fich.getPath());
            
            String nombre = fich.getName();
            
           
            
            Imagenes enviar = new Imagenes(fich, nombre);
            fichero = fich;
            
            ListIm.add(enviar);
            
            mostrarimagen(imagen);
            Nombreimagen.setText(nombre);
            
        } 
        
        System.out.println(ListIm.getSize()) ;
    }//GEN-LAST:event_SubirImagenActionPerformed

    private void SiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SiguienteActionPerformed
   
        
        Imagenes imagen = ListIm.ObtenerSigiente();
        Nombreimagen.setText(imagen.getNombre());
         ImageIcon im = new ImageIcon(imagen.getImagen().getPath());

        mostrarimagen(im);

    }//GEN-LAST:event_SiguienteActionPerformed

    private void AnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnteriorActionPerformed
        Imagenes imagen = ListIm.ObtenerAnterior();
        Nombreimagen.setText(imagen.getNombre());
        ImageIcon im = new ImageIcon(imagen.getImagen().getPath());
        mostrarimagen(im);

    }//GEN-LAST:event_AnteriorActionPerformed

    private void BorrarImActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarImActionPerformed
//       String nombre = Nombreimagen.getText().toString();
//       Icon icon = mostrarImagen.getIcon();
//       ImageIcon imagen = (ImageIcon) icon;
//       
//       Imagenes enviar =new Imagenes(imagen, nombre);
//       Object envio = enviar;
//       
//       Imagenes im = ListIm.ObtenerSigiente();
//       mostrarimagen (im.getImagen());
//       
//       ListIm.delete(enviar);
       

       
    }//GEN-LAST:event_BorrarImActionPerformed

    private String rutaUsuario(){
    String nombreruta="C:\\Users\\joz\\OneDrive\\Documentos\\NetBeansProjects\\"+UsuarioActual+"categoria.dat";
    return nombreruta;
    }
    
    private String rutacategorias(String categoria){
    
        String nombreruta="C:\\Users\\joz\\OneDrive\\Documentos\\NetBeansProjects\\"+UsuarioActual+categoria+"imagenes.dat";
    return nombreruta;
    
    
    }
    
    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed

        try {

            ObjectOutputStream escribiendo_fichero = new ObjectOutputStream(
                    new FileOutputStream(rutaUsuario()));

            escribiendo_fichero.writeObject(categoria);
            escribiendo_fichero.close();

        } catch (Exception e) {
            System.err.println("ERROR: " + e.getMessage());
            System.err.println(e);
        }
        
        
        try {

            ObjectOutputStream escribiendo_fichero = new ObjectOutputStream(
                    new FileOutputStream(rutacategorias(listacat.getSelectedValue().toString())));

            escribiendo_fichero.writeObject(ListIm);
            escribiendo_fichero.close();

        } catch (Exception e) {
            System.err.println("ERROR: " + e.getMessage());
            System.err.println(e);
        
        }
    }//GEN-LAST:event_GuardarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         try {

            ObjectInputStream recuperando_fichero = new ObjectInputStream(
                    new FileInputStream(rutaUsuario()));

            Categorias categoria_recuperada = (Categorias) recuperando_fichero.readObject();
            recuperando_fichero.close();

            categoria= categoria_recuperada ;
            System.out.println("Lista Recuperada");
            

        } catch (Exception e) {
            System.err.println("ERROR: " + e.getMessage());
            System.err.println(e);
        }
         
         actualizarlista();
         
        
         
    }//GEN-LAST:event_formWindowOpened

    private void listacatValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listacatValueChanged
       

        
    }//GEN-LAST:event_listacatValueChanged

    private void listacatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listacatMouseClicked
         
        
        //mostrarImagen.setIcon(null);
        
        String seleccionado= listacat.getSelectedValue().toString();
        System.out.println(seleccionado);

        CatImagen(seleccionado);

        if(ListIm != null){
        ImageIcon im = new ImageIcon(ListIm.getPrimero().getDato().getImagen().getPath());    
        mostrarimagen(im);
        
        } else{
         
            ListIm = new ListaCircular();       
        mostrarImagen.setIcon(null);
            
        }
        
        
        

        
        
    }//GEN-LAST:event_listacatMouseClicked
    
    
    public void mostrarimagen(ImageIcon image){
    Icon icono = new ImageIcon(image.getImage().
                           getScaledInstance(mostrarImagen.getWidth(), mostrarImagen.getHeight(), Image.SCALE_DEFAULT));
            
            mostrarImagen.setIcon(icono);
    
    }
    
    
    
      public void actualizarlista(){
          
          if(categoria.getCat().size()!=0){

          agregar.removeAllElements();
          listacat.setModel(agregar);
         
         for (int i = 0; i < categoria.getCat().size(); i++) {
            String a = categoria.getCat().get(i).toString();
            agregar.addElement(a);
         }       
        }
      
      }
    
    
      private void CatImagen(String categoria){
      
       try {
            ListIm = null;
            ObjectInputStream recuperando_fichero = new ObjectInputStream(
                    new FileInputStream(rutacategorias(categoria)));

            ListaCircular Lista_recuperada = (ListaCircular) recuperando_fichero.readObject();
            recuperando_fichero.close();

            
            ListIm= Lista_recuperada ;
            System.out.println("Imagenes recuperadas");
            
//            if(ListIm == null){
//            ListIm = new ListaCircular();
//            }
            

        } catch (Exception e) {
            System.err.println("ERROR: " + e.getMessage());
            System.err.println(e);
        }
       
      }
      
      
      
      
      
      
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Biblioteca().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agregar;
    private javax.swing.JButton Anterior;
    private javax.swing.JButton Borrar;
    private javax.swing.JButton BorrarIm;
    private javax.swing.JButton Guardar;
    private javax.swing.JLabel MostrarUsuario;
    private javax.swing.JLabel Nombreimagen;
    private javax.swing.JButton Siguiente;
    private javax.swing.JButton SubirImagen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JList<String> listacat;
    private javax.swing.JLabel mostrarImagen;
    // End of variables declaration//GEN-END:variables
}
